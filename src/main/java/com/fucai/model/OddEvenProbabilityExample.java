package com.fucai.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class OddEvenProbabilityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    public OddEvenProbabilityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andOddEvenIdIsNull() {
            addCriterion("ODD_EVEN_ID is null");
            return (Criteria) this;
        }

        public Criteria andOddEvenIdIsNotNull() {
            addCriterion("ODD_EVEN_ID is not null");
            return (Criteria) this;
        }

        public Criteria andOddEvenIdEqualTo(Integer value) {
            addCriterion("ODD_EVEN_ID =", value, "oddEvenId");
            return (Criteria) this;
        }

        public Criteria andOddEvenIdNotEqualTo(Integer value) {
            addCriterion("ODD_EVEN_ID <>", value, "oddEvenId");
            return (Criteria) this;
        }

        public Criteria andOddEvenIdGreaterThan(Integer value) {
            addCriterion("ODD_EVEN_ID >", value, "oddEvenId");
            return (Criteria) this;
        }

        public Criteria andOddEvenIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ODD_EVEN_ID >=", value, "oddEvenId");
            return (Criteria) this;
        }

        public Criteria andOddEvenIdLessThan(Integer value) {
            addCriterion("ODD_EVEN_ID <", value, "oddEvenId");
            return (Criteria) this;
        }

        public Criteria andOddEvenIdLessThanOrEqualTo(Integer value) {
            addCriterion("ODD_EVEN_ID <=", value, "oddEvenId");
            return (Criteria) this;
        }

        public Criteria andOddEvenIdIn(List<Integer> values) {
            addCriterion("ODD_EVEN_ID in", values, "oddEvenId");
            return (Criteria) this;
        }

        public Criteria andOddEvenIdNotIn(List<Integer> values) {
            addCriterion("ODD_EVEN_ID not in", values, "oddEvenId");
            return (Criteria) this;
        }

        public Criteria andOddEvenIdBetween(Integer value1, Integer value2) {
            addCriterion("ODD_EVEN_ID between", value1, value2, "oddEvenId");
            return (Criteria) this;
        }

        public Criteria andOddEvenIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ODD_EVEN_ID not between", value1, value2, "oddEvenId");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityIsNull() {
            addCriterion("ODD_PROBABILITY is null");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityIsNotNull() {
            addCriterion("ODD_PROBABILITY is not null");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityEqualTo(BigDecimal value) {
            addCriterion("ODD_PROBABILITY =", value, "oddProbability");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityNotEqualTo(BigDecimal value) {
            addCriterion("ODD_PROBABILITY <>", value, "oddProbability");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityGreaterThan(BigDecimal value) {
            addCriterion("ODD_PROBABILITY >", value, "oddProbability");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ODD_PROBABILITY >=", value, "oddProbability");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityLessThan(BigDecimal value) {
            addCriterion("ODD_PROBABILITY <", value, "oddProbability");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ODD_PROBABILITY <=", value, "oddProbability");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityIn(List<BigDecimal> values) {
            addCriterion("ODD_PROBABILITY in", values, "oddProbability");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityNotIn(List<BigDecimal> values) {
            addCriterion("ODD_PROBABILITY not in", values, "oddProbability");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ODD_PROBABILITY between", value1, value2, "oddProbability");
            return (Criteria) this;
        }

        public Criteria andOddProbabilityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ODD_PROBABILITY not between", value1, value2, "oddProbability");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityIsNull() {
            addCriterion("EVEN_PROBABILITY is null");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityIsNotNull() {
            addCriterion("EVEN_PROBABILITY is not null");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityEqualTo(BigDecimal value) {
            addCriterion("EVEN_PROBABILITY =", value, "evenProbability");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityNotEqualTo(BigDecimal value) {
            addCriterion("EVEN_PROBABILITY <>", value, "evenProbability");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityGreaterThan(BigDecimal value) {
            addCriterion("EVEN_PROBABILITY >", value, "evenProbability");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EVEN_PROBABILITY >=", value, "evenProbability");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityLessThan(BigDecimal value) {
            addCriterion("EVEN_PROBABILITY <", value, "evenProbability");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EVEN_PROBABILITY <=", value, "evenProbability");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityIn(List<BigDecimal> values) {
            addCriterion("EVEN_PROBABILITY in", values, "evenProbability");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityNotIn(List<BigDecimal> values) {
            addCriterion("EVEN_PROBABILITY not in", values, "evenProbability");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EVEN_PROBABILITY between", value1, value2, "evenProbability");
            return (Criteria) this;
        }

        public Criteria andEvenProbabilityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EVEN_PROBABILITY not between", value1, value2, "evenProbability");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNull() {
            addCriterion("LAST_UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNotNull() {
            addCriterion("LAST_UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE =", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <>", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThan(Date value) {
            addCriterion("LAST_UPDATE_DATE >", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE >=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThan(Date value) {
            addCriterion("LAST_UPDATE_DATE <", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE not in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE not between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table odd_even_probability
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table odd_even_probability
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}